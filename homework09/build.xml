<project name="hw09" default="reports" basedir="."
xmlns:jacoco="antlib:org.jacoco.ant"
xmlns:cs="antlib:com.puppycrawl.tools.checkstyle">

<description>
Build script for project homework09. 
</description>

<!-- Postavljanje globalnih varijabli -->
<property name="src" location="src"/>
<property name="src.java" location="${src}/main/java"/>
<property name="src.test" location="${src}/test/java"/>
<property name="build" location="build"/>
<property name="build.classes" location="${build}/classes"/>
<property name="build.test" location="${build}/test"/>
<property name="dist" location="dist"/>
<property name="lib" location="lib"/>
<property name="dist.lib" location="dist/lib"/>

<!-- Postavljanje varijabli za alate -->
<property file="config.properties"/>

<!-- Definiranje staze za prevođenje koda -->
<path id="compile.path">
<pathelement location="${build.classes}"/>
</path>

<!-- Definiranje staze do PMD biblioteka: -->
<path id="pmd.lib" >
<fileset dir="${pmd.home}/lib">
<include name="*.jar"/>
</fileset>
</path>

<!-- Definiranje naredbi za alate -->


<taskdef uri="antlib:com.puppycrawl.tools.checkstyle"
resource="checkstyletask.properties"
classpath="${checkstyle.home}/checkstyle-5.6-all.jar"/>

<taskdef name="findbugs"
classname="edu.umd.cs.findbugs.anttask.FindBugsTask">
<classpath path="${findbugs.home}/lib/findbugs-ant.jar"/>
</taskdef>

<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask"
classpathref="pmd.lib" />
<taskdef name="cpd" classname="net.sourceforge.pmd.cpd.CPDTask"
classpathref="pmd.lib" />



<target name="init">
<!-- Stvaranje vremenske oznake -->
<tstamp/>
<!-- Stvaranje potrebnih direktorija -->
<mkdir dir="${build}"/>
<mkdir dir="${dist}"/>
</target>

<target name="compile" depends="init"
description="Prevođenje izvornog koda">
<mkdir dir="${build.classes}"/>

<copy todir="${build.classes}">

    <fileset dir="${src.java}" excludes="**/*.java" />

</copy>

<!-- Prevođenje Java koda iz ${src} u ${build} -->
<javac srcdir="${src.java}" destdir="${build.classes}"
classpathref="compile.path"
encoding="UTF-8" debug="on"
debuglevel="lines,vars,source"
includeAntRuntime="false" />
</target>

<target name="compile-tests" depends="compile"
description="Prevođenje izvornog koda testova">
<mkdir dir="${build.test}"/>

<!-- Prevođenje Java koda iz ${src} u ${build} -->
<javac srcdir="${src.test}" destdir="${build.test}"
classpathref="test.path"
encoding="UTF-8" debug="on"
debuglevel="lines,vars,source"
includeAntRuntime="false" />
</target>

<target name="jar" depends="compile"
description="Pakiranje programa u arhivu JAR" >
<!-- Stvaranje direktorija za distribuciju -->
<mkdir dir="${dist.lib}"/>
<!-- Arhiviranje svega iz ${build} u arhivu 
${ant.project.name}-${DSTAMP}.jar -->
<jar jarfile="${dist.lib}/JNotepadPP.jar"
basedir="${build.classes}"
excludes="**/demo/**">
</jar>
</target>

<target name="cs" depends="compile">
<mkdir dir="${dist}/checkstyle/xml"/>
<mkdir dir="${dist}/checkstyle/html"/>
<cs:checkstyle config="${checkstyle.home}/sun_checks_2.xml"
failOnViolation="false">
<fileset dir="${src.java}" includes="**/*.java"/>
<formatter type="xml"
toFile="${dist}/checkstyle/xml/checkstyle_errors.xml"/>
</cs:checkstyle>
<xslt basedir="${dist}/checkstyle/xml"
destdir="${dist}/checkstyle/html" extension=".html"
style="${checkstyle.home}/contrib/checkstyle-frames.xsl">
<classpath>
<fileset dir="${xalan.home}">
<include name="*.jar"/>
</fileset>
</classpath>
</xslt>
</target>

<target name="findbugs" depends="compile">
<mkdir dir="${dist}/findbugs/xml"/>
<mkdir dir="${dist}/findbugs/html"/>
<findbugs home="${findbugs.home}"
output="xml:withMessages"
outputFile="${dist}/findbugs/xml/report.xml"
workHard="true" effort="max"
projectName="${ant.project.name}">
<sourcePath path="${src.java}" />
<class location="${build.classes}" />
</findbugs>
<xslt includes="report.xml" basedir="${dist}/findbugs/xml"
destdir="${dist}/findbugs/html" extension=".html"
style="${findbugs.home}/src/xsl/fancy.xsl" >
<classpath>
<fileset dir="${xalan.home}">
<include name="*.jar"/>
</fileset>
</classpath>
</xslt>
</target>

<target name="pmd" depends="compile">
<mkdir dir="${dist}/pmd/xml"/>
<mkdir dir="${dist}/pmd/html"/>
<pmd shortFilenames="true" encoding="UTF-8">
<ruleset>rulesets/java/basic.xml</ruleset>
<ruleset>rulesets/java/braces.xml</ruleset>
<ruleset>rulesets/java/codesize.xml</ruleset>
<ruleset>rulesets/java/controversial.xml</ruleset>
<ruleset>rulesets/java/design.xml</ruleset>
<ruleset>rulesets/java/finalizers.xml</ruleset>
<ruleset>rulesets/java/imports.xml</ruleset>
<ruleset>rulesets/java/naming.xml</ruleset>
<ruleset>rulesets/java/optimizations.xml</ruleset>
<ruleset>rulesets/java/strictexception.xml</ruleset>
<ruleset>rulesets/java/strings.xml</ruleset>
<ruleset>rulesets/java/sunsecure.xml</ruleset>
<ruleset>rulesets/java/typeresolution.xml</ruleset>
<ruleset>rulesets/java/unusedcode.xml</ruleset>
<ruleset>rulesets/java/unnecessary.xml</ruleset>
<formatter type="xml" toFile="${dist}/pmd/xml/pmd_report.xml"/>
<fileset dir="${src.java}">
<include name="**/*.java"/>
</fileset>
</pmd>
<cpd minimumTokenCount="10"
outputFile="${dist}/pmd/xml/cpd_report.xml"
format="xml" encoding="UTF-8">
<fileset dir="src">
<include name="**/*.java"/>
</fileset>
</cpd>
<xslt includes="cpd_report.xml" basedir="${dist}/pmd/xml"
destdir="${dist}/pmd/html" extension=".html"
style="${pmd.home}/etc/xslt/cpdhtml.xslt" >
<classpath>
<fileset dir="${xalan.home}">
<include name="*.jar"/>
</fileset>
</classpath>
</xslt>
<xslt includes="pmd_report.xml" basedir="${dist}/pmd/xml"
destdir="${dist}/pmd/html" extension=".html"
style="${pmd.home}/etc/xslt/wz-pmd-report.xslt" >
<classpath>
<fileset dir="${xalan.home}">
<include name="*.jar"/>
</fileset>
</classpath>
</xslt>
</target>

<target name="quality" depends="cs,pmd,findbugs"
description="run unit tests and all of the quality checks">
</target>

<target name="javadoc" depends="compile" description="Generiranje dokumentacije">

<!-- Stvaranje direktorija za distribuciju -->
<mkdir dir="${dist}/doc"/>
<javadoc packagenames="hr.*"
sourcepath="${src.java}"
sourcepathref="compile.path"
Overview="${src.java}/overview.html"
defaultexcludes="yes"
destdir="${dist}/doc"
Encoding="UTF-8"
docencoding="UTF-8"
charset="UTF-8"
author="true"
version="true"
use="true"
windowtitle="Homework 09 documentation">
<doctitle>
<![CDATA[<h1>Homework 09</h1>]]>
</doctitle>
<bottom>
<![CDATA[<i>Copyright &#169; 2013 ACME. 
All Rights Reserved.</i>]]>
</bottom>
</javadoc>
</target>

<target name="reports" depends="quality,javadoc"
description="run all of the unit tests, the quality checks and the javadoc generation">
</target>

<target name="clean"
description="Brisanje generiranog sadržaja" >
<!-- Obriši direktorije ${build} i ${dist} -->
<delete dir="${build}" failonerror="false" />
<delete dir="${dist}" failonerror="false" />
</target>



<target name="run1" depends="compile"
        description="Pokretanje programa">
        <java classname="hr.fer.zemris.java.hw08.jvdraw.JVDraw" classpath="${build.classes}"
            fork="true" classpathref="compile.path" >
        </java>
</target> 

<target name="run2" depends="compile"
        description="Pokretanje programa">
        <java classname="hr.fer.zemris.java.hw08.ljnotepadpp.JNotepadPP" classpath="${build.classes}"
            fork="true" classpathref="compile.path" >
        </java>
</target> 

</project>
